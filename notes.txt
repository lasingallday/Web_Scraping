-----------------------------------------------------------
for _get_json/self.json/json_inp,
self._endpoint = self.'boxscoretraditionalv2'
params={'GameID': game_id,
		'Season': season,
		'SeasonType': season_type,
		'RangeType': range_type,
		'StartPeriod': start_period,
		'EndPeriod': end_period,
		'StartRange': start_range,
		'EndRange': end_range}

for player_stats function, _api_scrape(self.json, 0/1/2)

-----------------------------------------------------------
in _get_json,
HEADERS = {
    'user-agent': ('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) '
                   'AppleWebKit/537.36 (KHTML, like Gecko) '
                   'Chrome/45.0.2454.101 Safari/537.36'),
}
h = dict(HEADERS)
h['referer'] = 'http://stats.nba.com/{ref}/'.format(ref='scores')
_get = get(BASE_URL.format(endpoint=endpoint), params=params,
               headers=h)
_get.raise_for_status()
get, _get.json()

in _api_scrape,
headers = json_inp['resultSets'][ndx]['headers']
values = json_inp['resultSets'][ndx]['rowSet']
get, DataFrame(values, columns=headers)
-----------------------------------------------------------